C51 COMPILER V9.01   MAIN                                                                  07/10/2024 21:22:21 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          # include <AT89x51.h>
   2          /*****************************************
   3           P1------DB0～DB7 P2.0------RS
   4           P2.1------RW
   5           P2.2------E
   6          *****************************************/
   7          # define LCD_DB P1
   8           sbit LCD_RS=P2^0;
   9           sbit LCD_RW=P2^1;
  10           sbit LCD_E=P2^2;
  11          /******定义函数****************/
  12          
  13          void LCD_init(void);//初始化函数
  14          void LCD_write_command(char command);//写指令函数
  15          void LCD_write_data(char dat);//写数据函数
  16          void LCD_disp_char(char x,char y,char dat);//在某个屏幕位置上显示一
  17          //void LCD_check_busy(void);//检查忙函数。我没用到此函数，因为通过率极
  18          void delay_n40us(int n);//延时函数
  19          //********************************
  20          //*******初始化函数***************
  21          void LCD_init(void)
  22          {
  23   1      LCD_write_command(0x38);//设置 8 位格式，2 行，5x7
  24   1      LCD_write_command(0x0c);//整体显示，关光标，不闪烁
  25   1      LCD_write_command(0x06);//设定输入方式，增量不移位
  26   1      LCD_write_command(0x01);//清除屏幕显示
  27   1      delay_n40us(100);//实践证明，我的 LCD1602 上，用 for 循环 200 次就能可靠
  28   1      }
  29          //********************************
  30          //********写指令函数************
  31          void LCD_write_command(char dat)
  32          {
  33   1      LCD_DB=dat;
  34   1      LCD_RS=0;//指令
  35   1      LCD_RW=0;//写入
  36   1      LCD_E=1;//允许
  37   1      LCD_E=0;
  38   1      delay_n40us(1);//实践证明，我的 LCD1602 上，用 for 循环 1 次就能完成普通
  39   1      }
  40          //*******************************
  41          //********写数据函数*************
  42          void LCD_write_data(char dat)
  43          {
  44   1      LCD_DB=dat;
  45   1      LCD_RS=1;//数据
  46   1      LCD_RW=0;//写入
  47   1      LCD_E=1;//允许
  48   1      LCD_E=0;
  49   1      delay_n40us(1);
  50   1      }
  51          //********************************
  52          //*******显示一个字符函数*********
  53          void LCD_disp_char(char x,char y,char dat)
  54          {
  55   1      char address;
C51 COMPILER V9.01   MAIN                                                                  07/10/2024 21:22:21 PAGE 2   

  56   1      if(y==1)
  57   1       address=0x80+x;
  58   1      else
  59   1       address=0xc0+x;
  60   1      LCD_write_command(address);
  61   1      LCD_write_data(dat);
  62   1      }
  63          //********************************
  64          /*******检查忙函数*************
  65          void LCD_check_busy() //实践证明，在我的 LCD1602 上，检查忙指令通
  66          过率极低，以
  67          { //至于不能正常使用 LCD。因
  68          此我没有再用检查忙函数。而使
  69          do //用了延时的方法，延时还是非
  70          常好用的。我试了一下，用
  71           { LCD_E=0; //for 循环作延时，普通指令只要 1
  72          次循就可完成。清屏指令
  73           LCD_RS=0; //要用 200 次循环便能完成。
  74           LCD_RW=1;
  75           LCD_DB=0xff;
  76           LCD_E=1;
  77           }while(LCD_DB^7==1);
  78          ｝
  79          ******************************/
  80          //********延时函数***************
  81          void delay_n40us(int n)
  82          { int i;
  83   1       char j;
  84   1       for(i=n;i>0;i--)
  85   1       for(j=0;j<2;j++); //在这个延时循环函数中我只做了
  86   1      } 
  87          //实践证明我的 LCD1602 上普
  88          //*******************************
  89          //*********主函数*****************
  90          void main(void)
  91          {
  92   1       LCD_init();
  93   1       LCD_disp_char(0,1,"A");
*** WARNING C214 IN LINE 93 OF MAIN.C: 'Argument': conversion: pointer to non-pointer
  94   1       while(1);
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    126    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
